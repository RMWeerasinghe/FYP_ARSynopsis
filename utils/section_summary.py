class SectionSummary:
    """
    A new data structure to represent the summary paragraph of a section.
    
    Attributes:
    ---------------------------
    section_id : int
        A unique identifier for the section, obtained from the index resulted after content selection process
    summary: string
        summary of the content generated by abstractive summarization
    mapping: list
        list[i] : x -> i th sentence of the summary is related to x in the original content.
    
    Methods:
    --------------------------
    add_summary(string):
        Add the abstractive summary of the section content
    set_mapping(list):
        Add mapping list to the sentence
    get_summary():
        Return the summary text
    get_section_id():
        Return the section id
    
    []= [para1, para2, para3] -> [para1, para2, para3]  & [sum1, sum2,sum3] -> [section_sum1, sectiopn_sum2,..]

    section_sum1
     - section id = 1
     - summary = sum1 "= ""
     - mapping [""sent2"", sent3, "we are ",]
        Explana
    """

    def __init__(self,section_id) -> None:
        self.section_id = section_id
        self.summary = ""
        self.mapping = []
    
    def add_summary(self, summary) -> None:
        self.summary = summary
    
    def set_mapping(self, mapping_list) -> None:
        self.mapping = mapping_list

    def get_summary(self) -> str:
        return self.summary
    
    def get_section_id(self)->int:
        return self.section_id


        